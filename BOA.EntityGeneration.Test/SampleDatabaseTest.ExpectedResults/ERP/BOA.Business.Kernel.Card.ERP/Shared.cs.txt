using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;

namespace BOA.Business.Kernel.Card.ERP_Core
{
    /// <summary>
    ///     The SQL information
    /// </summary>
    sealed class SqlInfo
    {
        #region Fields
        /// <summary>
        ///     Gets or sets the parameters.
        /// </summary>
        readonly List<SqlParameter> parameters = new List<SqlParameter>();
        #endregion

        #region Public Properties
        /// <summary>
        ///     Gets or sets the command text.
        /// </summary>
        public string CommandText { get; set; }

        /// <summary>
        ///     Gets the parameters.
        /// </summary>
        public IReadOnlyList<SqlParameter> Parameters => parameters;
        #endregion

        #region Public Methods
        /// <summary>
        ///     Adds the in parameter.
        /// </summary>
        public void AddInParameter(string name, SqlDbType dbType, object value)
        {
            var parameter = new SqlParameter
            {
                ParameterName = name,
                SqlDbType     = dbType,
                Value         = value
            };
            parameters.Add(parameter);
        }
        #endregion
    }
    sealed class SampleTable
    {

        public static SqlInfo GetDeleteByKeyInfo(int sampleTableId)
        {
            const string sql = "DELETE FROM [ERP].[SAMPLE_TABLE] WHERE [SAMPLE_TABLE_ID] = @SAMPLE_TABLE_ID";

            var sqlInfo = new SqlInfo { CommandText = sql };

            sqlInfo.AddInParameter("@SAMPLE_TABLE_ID", SqlDbType.Int, sampleTableId);

            return sqlInfo;
        }

        public static SqlInfo GetSelectByKeyInfo(int sampleTableId)
        {
            const string sql = @"
            SELECT
                [SAMPLE_TABLE_ID],
                [FIELD_VARCHAR_50],
                [FIELD_VARCHAR_50_NULLABLE],
                [FIELD_DATETIME],
                [FIELD_DATETIME_NULLABLE],
                [FIELD_NUMERIC_27_0],
                [FIELD_NUMERIC_27_0_NULLABLE],
                [FIELD_INT],
                [FIELD_INT_NULLABLE],
                [FIELD_MONEY],
                [FIELD_MONEY_NULLABLE],
                [FIELD_NVARCHAR],
                [FIELD_NVARCHAR_NULLABLE],
                [FIELD_NCHAR],
                [FIELD_NCHAR_NULLABLE],
                [FIELD_SMALLDATETIME],
                [FIELD_SMALLDATETIME_NULLABLE],
                [FIELD_SMALLINT],
                [FIELD_SMALLINT_NULLABLE],
                [FIELD_TINYINT],
                [FIELD_TINYINT_NULLABLE],
                [FIELD_CHAR],
                [FIELD_CHAR_NULLABLE],
                [FIELD_BIGINT],
                [FIELD_BIGINT_NULLABLE],
                [FIELD_BIT],
                [FIELD_BIT_NULLABLE],
                [FIELD_DECIMAL],
                [FIELD_DECIMAL_NULLABLE],
                [FIELD_UNIQUEIDENTIFIER],
                [FIELD_UNIQUEIDENTIFIER_NULLABLE],
                [FIELD_VARBINARY],
                [FIELD_VARBINARY_NULLABLE],
                [FIELD_INDEX_1],
                [FIELD_INDEX_2_1],
                [FIELD_INDEX_2_2],
                [FIELD_INDEX_3_1],
                [FIELD_INDEX_3_2],
                [FIELD_INDEX_3_3],
                [FIELD_CHAR_VALID_FLAG]
                FROM [ERP].[SAMPLE_TABLE] WITH (NOLOCK)
            WHERE
                [SAMPLE_TABLE_ID] = @SAMPLE_TABLE_ID
            ";

            var sqlInfo = new SqlInfo { CommandText = sql };

            sqlInfo.AddInParameter("@SAMPLE_TABLE_ID", SqlDbType.Int, sampleTableId);

            return sqlInfo;
        }
    }
}
