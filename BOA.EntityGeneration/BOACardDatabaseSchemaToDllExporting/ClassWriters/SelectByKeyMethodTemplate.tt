<#@ template language="C#" #>
<#@ import namespace="System.Linq" #>
<#@ parameter name="selectByPrimaryKeyInfo" type="BOA.EntityGeneration.ScriptModel.SelectByPrimaryKeyInfo" #>
<#@ parameter name="typeContractName" type="System.String" #>

/// <summary>
///     Selects record by primary keys.
/// </summary>
public GenericResponse<<#=typeContractName#>> SelectByKey(<#=string.Join(", ", selectByPrimaryKeyInfo.SqlParameters.Select(x => $"{x.DotNetType} {x.ColumnName.AsMethodParameter()}"))#>)
{
	const string sql = @"
	<#=selectByPrimaryKeyInfo.Sql #>";
	
	var command = this.CreateCommand(sql);
	<# if (selectByPrimaryKeyInfo.SqlParameters.Any()){ #>

<# foreach (var columnInfo in selectByPrimaryKeyInfo.SqlParameters) {#>
	DBLayer.AddInParameter(command, "@<#=columnInfo.ColumnName#>", SqlDbType.<#=columnInfo.SqlDbType#>, <#=columnInfo.ColumnName.AsMethodParameter()#>);
<#}#>
	<#}#>

	return this.ExecuteReaderForOnlyOneRecord<<#=typeContractName#>>(command, ReadContract);
}