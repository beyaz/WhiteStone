<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System.Collections.Generic;
using BOA.Base;
using BOA.Common.Types;
using BOA.Common.Helpers;
using <#=this.NamespaceNameForType#>;

namespace <#=this.NamespaceName#>
{
    public class <#=this.ClassName#>
    {
        /// <summary>
        ///     Loads the data.
        /// </summary>
        public GenericResponse<<#=this.RequestName#>> LoadData(<#=this.RequestName#> request, ObjectHelper objectHelper)
        {
            var returnObject = objectHelper.InitializeResponse(request);

            request = new <#=this.RequestName#>();

            request.DataSource.DataGridInfo = GetDataGridInfo();
            request.DataSource.Records      = new List<<#=this.DefinitionFormDataClassName#>>();

            returnObject.Value = request;

            return returnObject;
        }

        /// <summary>
        ///     Gets the information.
        /// </summary>
        public GenericResponse<<#=this.RequestName#>> GetInfo(<#=this.RequestName#> request, ObjectHelper objectHelper)
        {
            var returnObject = objectHelper.InitializeResponse(request);
            var data         = request.Data;
            var dataSource   = request.DataSource;
           

            #region TODO: Expects code
            dataSource.Records = RandomValue.ListOf<<#=this.DefinitionFormDataClassName#>>();
            #endregion

            request.StatusMessage = dataSource.Records.Count + Message.RecordsWereBrought;

            return returnObject;
        }

        /// <summary>
        ///     Gets the data grid information.
        /// </summary>
        static DataGridInfo GetDataGridInfo()
        {
            return DataGridInfo.Create(typeof(<#=this.DefinitionFormDataClassName#>), new[]
            {
<#for(int i = 0; i < GridColumnFields.Count - 1; i++)#>
<#{#>
                nameof(<#= this.DefinitionFormDataClassName#>.<#=GridColumnFields[i]#>),
<#}#>
                nameof(<#=this.DefinitionFormDataClassName#>.<#=GridColumnFields[GridColumnFields.Count - 1]#>)
            });
        }        
    }
}
